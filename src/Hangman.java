import java.util.Random;
import java.util.Scanner;

public class Hangman {
    private String word;
    private char[] guessedWord;
    private StringBuilder health;
    private static final String[] words = {"–ö–∏—Ç–∫–∞", "–î–µ–ª–∞—Ç—å", "–ö—É—Å—å", "–ú–æ–µ–π", "–†—É–∫–∞"};

    public static void main(String[] args) {
        new Hangman().startGame();
    }

    public void startGame() {

        Random rand = new Random();
        this.word = words[rand.nextInt(words.length)];
        this.guessedWord = new char[word.length()];
        this.health = new StringBuilder("\u2764\uFE0F\u2764\uFE0F\u2764\uFE0F\u2764\uFE0F");
        boolean wordGuessed = false;

        initializeGuessedWord();
        Scanner scanner = new Scanner(System.in);

        System.out.println("–≠—Ç–æ –∏–≥—Ä–∞ –í–∏—Å–µ–ª–∏—Ü–∞, —É–≥–∞–¥–∞–π—Ç–µ —Å–ª–æ–≤–æ –ø–æ –±—É–∫–≤–∞–º –∏–ª–∏ —É–º—Ä–∏—Ç–µ UwU\n");

        while (health.length() > 0 && !wordGuessed) {
            System.out.println("–í–∞—à–µ –∑–¥–æ—Ä–æ–≤—å–µ: " + health + "\n");
            System.out.println("–í–≤–µ–¥–∏—Ç–µ –±—É–∫–≤—É:");
            char input = scanner.nextLine().toLowerCase().charAt(0);

            makeGuess(input);
            System.out.print("–û—Ç–≥–∞–¥—ã–≤–∞–µ–º–æ–µ —Å–ª–æ–≤–æ: ");
            System.out.println(guessedWord);

            wordGuessed = new String(guessedWord).equals(word);
        }

        if (wordGuessed) {
            System.out.println("\nüéä –í—ã —Å–ø—Ä–∞–≤–∏–ª–∏—Å—å! üéä");
            System.out.println("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: " + word);
            System.out.println("     üòäüòäüòä     ");
            System.out.println("    (  O O )    ");
            System.out.println("     \\  ^  /    ");
            System.out.println("      \\___/     ");
        } else {
            System.out.println("\nüíî –£–≤—ã, –≤—ã –Ω–µ —Å–º–æ–≥–ª–∏ –æ—Ç–≥–∞–¥–∞—Ç—å —Å–ª–æ–≤–æ... üíî");
            System.out.println("–ó–∞–≥–∞–¥–∞–Ω–Ω–æ–µ —Å–ª–æ–≤–æ –±—ã–ª–æ: " + word);
            System.out.println(" __     ______  _    _    _______ (‚óè)   ________ _______ ");
            System.out.println(" \\ \\   / / __ \\| |  | |  |  __ \\| |  | |  ____| |  __ \\|");
            System.out.println("  \\ \\_/ / |  | | |  | |  | |  | | |  | | |__    | |  | |");
            System.out.println("   \\   /| |  | | |  | |  | |  | | |  | |  __|   | |  | |");
            System.out.println("    | | | |__| | |__| |  | |__| | |  | | |____  | |__| |");
            System.out.println("    |_|  \\____/ \\____/   |_____/| |  | |______| |_____/|");
        }
    }

    private void initializeGuessedWord() { // —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ—Ç–≥–∞–¥–∞–Ω–Ω—ã—Ö –±—É–∫–≤
        for (int i = 0; i < word.length(); i++) {
            guessedWord[i] = '_';
        }
    }

    private void makeGuess(char input) { //–ø—Ä–æ–≤–µ—Ä—è–µ–º —É–≥–∞–¥–∞–Ω–∞ –ª–∏ –±—É–∫–≤–∞
        boolean correctGuess = false;
        for (int i = 0; i < word.length(); i++) {
            if (Character.toLowerCase(word.charAt(i)) == input) {
                guessedWord[i] = word.charAt(i);
                correctGuess = true;
            }
        }
        if (!correctGuess) {
            health.deleteCharAt(health.length() - 1); // –£–º–µ–Ω—å—à–∞–µ–º –∑–¥–æ—Ä–æ–≤—å–µ
        }
    }


}